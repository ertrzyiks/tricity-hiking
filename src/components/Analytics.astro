<script>
  import { StatsigClient, type StatsigOptions } from "@statsig/js-client";
  import { StatsigSessionReplayPlugin } from "@statsig/session-replay";
  import { StatsigAutoCapturePlugin } from "@statsig/web-analytics";

  type CookieConsentEvent = {
    detail: {
      cookie: {
        services: {
          analytics: string[];
        };
      };
    };
  };

  if (import.meta.env.PUBLIC_ASTRO_STATSIG_TRACKING_ENABLED === "true") {
    window.addEventListener("cc:onConsent", (event) => {
      if (!("detail" in event)) {
        return;
      }

      const cookieConsentEvent = event as CookieConsentEvent;

      const detail = cookieConsentEvent.detail;

      const isStatsigAllowed =
        detail.cookie.services.analytics.includes("statsig");

      if (!isStatsigAllowed) {
        return;
      }

      const options: StatsigOptions = {
        plugins: [
          new StatsigSessionReplayPlugin(),
          new StatsigAutoCapturePlugin(),
        ],
        environment: { tier: import.meta.env.MODE },
      };

      const myStatsigClient = new StatsigClient(
        "client-LvIEhUfKLEVA78IOUgqT9i8r4Fs1CDqr4OcUyHqsF5x",
        {},
        options,
      );
      myStatsigClient.initializeAsync();
    });
  }
</script>
