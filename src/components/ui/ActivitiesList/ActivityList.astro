---
import GroupHeader from "./GroupHeader/GroupHeader.astro";
import ActivityListCardItem from "../ListCardItem/Activity.astro";
import { ranks } from "./ranks";
import { content } from "./content";
import type { CollectionEntry } from "astro:content";

const { activities, groupBy = "type" } = Astro.props;
type GroupByKey = keyof typeof ranks;
type Activity = CollectionEntry<'activities'> | CollectionEntry<'blog'>;

const groupContent = content[groupBy as keyof typeof content] || {};

// Helper functions to safely extract values from either collection type
function getName(activity: Activity): string {
  if ('name' in activity.data) {
    return activity.data.name;
  }
  if ('title' in activity.data) {
    return activity.data.title;
  }
  return '';
}

function getImage(activity: Activity) {
  if ('image' in activity.data && activity.data.image) {
    return activity.data.image;
  }
  if ('coverImage' in activity.data && activity.data.coverImage) {
    return activity.data.coverImage;
  }
  return undefined;
}

const groupedActivities = activities.reduce(
  (acc: Record<string, Activity[]>, activity: Activity) => {
    const groupValue = activity.data[groupBy as keyof Activity['data']];
    const key = String(groupValue || "other");
    if (!acc[key]) {
      acc[key] = [];
    }
    acc[key].push(activity);
    return acc;
  },
  {},
);

const sortedActivities = Object.entries(groupedActivities).sort((a, b) => {
  const key = groupBy as GroupByKey;
  const rankMap = ranks[key];

  const rankA = rankMap.indexOf(a[0]) !== -1 ? rankMap.indexOf(a[0]) : 100; // Default rank if not found
  const rankB = rankMap.indexOf(b[0]) !== -1 ? rankMap.indexOf(b[0]) : 100; // Default rank if not found
  return rankA - rankB;
});
---

{
  sortedActivities.map(([type, activities]) => (
    <div class="my-4">
      <GroupHeader property={groupBy} value={type} />

      <ul>
        {(activities as Activity[]).map((activity) => (
          <ActivityListCardItem
            link={activity.data.link}
            icon={groupContent[type as keyof typeof groupContent].defaultIcon}
            image={getImage(activity)}
            name={getName(activity)}
            description={activity.data.description}
            location={activity.data.location}
          />
        ))}
      </ul>
    </div>
  ))
}
