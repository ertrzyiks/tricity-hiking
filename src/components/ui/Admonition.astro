---
// Admonition.astro
// A reusable admonition component for Astro projects

// Define the props with TypeScript
interface Props {
  type?: "info" | "warning" | "danger" | "success" | "note";
  title?: string;
  icon?: boolean;
}

// Destructure the component props with defaults
const { type = "info", title, icon = true } = Astro.props;

// Configuration for different admonition types
const config = {
  info: {
    iconPath: `<path d="M12 16v-4M12 8h.01M22 12c0 5.523-4.477 10-10 10S2 17.523 2 12 6.477 2 12 2s10 4.477 10 10z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    color: "border-blue-500",
    titleColor: "text-blue-500",
    iconColor: "text-blue-500",
  },
  warning: {
    iconPath: `<path d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    color: "border-amber-500",
    titleColor: "text-amber-800",
    iconColor: "text-amber-500",
  },
  danger: {
    iconPath: `<path d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    color: "border-red-500",
    titleColor: "text-red-800",
    iconColor: "text-red-500",
  },
  success: {
    iconPath: `<path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    color: "border-green-500",
    titleColor: "text-green-800",
    iconColor: "text-green-500",
  },
  note: {
    iconPath: `<path d="M8.228 9c.549-1.165 2.03-2 3.772-2 2.21 0 4 1.343 4 3 0 1.4-1.278 2.575-3.006 2.907-.542.104-.994.54-.994 1.093m0 3h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>`,
    color: "border-purple-500",
    titleColor: "text-purple-800",
    iconColor: "text-purple-500",
  },
};

// Get the configuration for the selected type
const { iconPath, color, titleColor, iconColor } = config[type] || config.info;
---

<div class={`${color} bg-slate-50 border-l-4 p-4 mb-4`}>
  <div class="flex flex-col gap-2">
    {
      title && (
        <h4 class={`font-medium mb-1 flex items-center ${titleColor}`}>
          {icon && (
            <div class={`mr-2 flex-shrink-0 ${iconColor}`}>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                class="h-5 w-5"
                fill="none"
                viewBox="0 0 24 24"
                set:html={iconPath}
              />
            </div>
          )}
          {title}
        </h4>
      )
    }
    <div class="text-md text-slate-800">
      <slot />
    </div>
  </div>
</div>
