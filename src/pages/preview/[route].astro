---
import type { InferGetStaticParamsType } from "astro";
import { getCollection, getEntry } from "astro:content";
import { PreviewRouteMap } from "../../components/PreviewRouteMap/PreviewRouteMap";

if (import.meta.env.MODE !== "development") {
  return new Response(null, { status: 404 });
}

export async function getStaticPaths() {
  const allRoutes = await getCollection("routes");

  return allRoutes.map((route) => {
    return {
      params: {
        route: route.id,
      },
    };
  });
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;

const { route } = Astro.params as Params;

const entry = await getEntry("routes", route);
if (!entry) {
  Astro.response.status = 404;
  Astro.response.statusText = "Not found";
  return;
}
const geojson = await getEntry(entry.data.geojson);

if (!geojson) {
  Astro.response.status = 404;
  Astro.response.statusText = "Not found";
  return;
}
---

<div id="preview">
  <PreviewRouteMap client:only="preact" route={geojson.data} />
</div>

<style is:global>
  .maplibregl-map {
    height: 300px;
    width: 300px;
  }
</style>
