---
import "../styles/base.css";
import { ClientRouter } from "astro:transitions";
import { Icon } from "astro-icon/components";
import { Image } from "astro:assets";
import { localizedHTML as favicons } from "astro-favicons/middleware";
import { getEntry } from "astro:content";

import SidebarSwitch from "../components/SidebarSwitch/SidebarSwitch.tsx";
import NavLink from "../components/NavLink.astro";
import Analytics from "../components/Analytics.astro";
import CookieConsent from "../components/CookieConsent/CookieConsent.astro";
import logo from "../assets/logo.png";

const pathname = new URL(Astro.request.url).pathname;

let canonicalURL = new URL(Astro.url.pathname, Astro.site).toString();
canonicalURL += canonicalURL.endsWith("/") ? "" : "/";

const mapTiles = await getEntry("map-tiles", "routes");

const urls = mapTiles?.data.urls ?? [];

interface Props {
  title: string;
  description?: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta
      name="description"
      content={description ??
        "Discover nature-focused, family-friendly hiking routes in Tricity. Local tips, hidden gems, and an interactive map to help tourists explore the area."}
    />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link rel="canonical" href={canonicalURL} />
    <link
      rel="preload"
      href="https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      onload="this.onload=null;this.rel='stylesheet';this.removeAttribute('as')"
      as="style"
    />
    <noscript>
      <link
        rel="stylesheet"
        href="https://fonts.googleapis.com/css2?family=Fira+Sans:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
      />
    </noscript>

    {urls.map((url) => <link rel="prefetch" href={url} crossorigin />)}

    <title>{title}</title>

    <link rel="sitemap" href="/sitemap-index.xml" />
    <ClientRouter />
    <Fragment set:html={favicons(Astro.currentLocale)} />
  </head>
  <body>
    {import.meta.env.PIWIK_TRACKING_ENABLED !== "false" && <Analytics />}
    <CookieConsent />

    <main>
      <nav
        class="flex relative justify-center lg:justify-start bg-slate-50 py-2 sm:py-4 px-2"
      >
        <SidebarSwitch
          className="lg:hidden absolute left-3 top-2 cursor-pointer"
          client:load
        >
          <Icon name="mdi:menu" class="text-3xl" />
        </SidebarSwitch>

        <a href="/" class="flex items-center -my-2 sm:-my-4">
          <Image
            src={logo}
            alt="Tricity Hiking"
            height={128}
            style="width: auto; height: 48px;"
            loading="eager"
          />
        </a>

        <div id="sidebar" class="sidebar bg-slate-50">
          <div
            class="flex gap-2 items-center flex-col lg:flex-row lg:ml-4 h-full pt-4 lg:pt-0"
          >
            <NavLink
              id="navbar-routes"
              href="/routes/"
              matches={(pathname: string) =>
                pathname.startsWith("/routes/") ||
                pathname.startsWith("/list/") ||
                pathname.startsWith("/extended/")}>Routes</NavLink
            >
            <NavLink href="/activities/">Activities</NavLink>
            <NavLink href="/food/">Food</NavLink>
            <NavLink href="/transportation/">Transportation</NavLink>
            <NavLink href="/timeline/">History</NavLink>
          </div>
        </div>
      </nav>

      <div class="">
        <slot name="hero" />
        <div class="p-2 lg:p-4">
          <slot />
        </div>
      </div>
    </main>

    <footer class="px-2 lg:px-0 border-t border-solid border-slate-200">
      <div class="max-w-(--breakpoint-xl) mx-auto flex py-8 gap-8">
        <div>Tricity Hiking, {new Date().getFullYear()}</div>
        <nav>
          <ul class="list-none flex gap-4">
            <li>
              <a
                class="text-slate-600 hover:underline"
                href="https://github.com/ertrzyiks/tricity-hiking"
                target="_blank"
                rel="noopener">Github</a
              >
            </li>
            <li>
              <button
                class="text-slate-600 hover:underline cursor-pointer"
                type="button"
                data-cc="show-preferencesModal"
                >Cookies
              </button>
            </li>
            <li>
              <a
                class="text-slate-600 hover:underline"
                href="https://byd5xay149t.typeform.com/to/R0pgudVy"
                target="_blank"
                rel="noopener">Contact</a
              >
            </li>
          </ul>
        </nav>
      </div>
    </footer>
  </body>
</html>
<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    font-family: "Fira Sans", sans-serif;
    background: #f8fafc;
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>

<script>
  import { navigate } from "astro:transitions/client";

  document.addEventListener("astro:page-load", () => {
    const link = document.getElementById("navbar-routes");

    if (link) {
      link.addEventListener("click", (event) => {
        let routePathName = null;

        try {
          const sessionRoute = sessionStorage.getItem("routes-entry-point");

          if (
            sessionRoute &&
            ["/routes/", "/list/", "/extended/"].includes(sessionRoute)
          ) {
            routePathName = sessionRoute;
          }
        } catch {}

        if (routePathName) {
          event.preventDefault();

          navigate(routePathName);
        }
      });
    }
  });
</script>

<script define:vars={{ pathname }} is:inline>
  const routesEntryPoints = ["/routes/", "/list/", "/extended/"];

  if (routesEntryPoints.includes(pathname)) {
    try {
      sessionStorage.setItem("routes-entry-point", pathname);
    } catch (e) {}
  }
</script>
